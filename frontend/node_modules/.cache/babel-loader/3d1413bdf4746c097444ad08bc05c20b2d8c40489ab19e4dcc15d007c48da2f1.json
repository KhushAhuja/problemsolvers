{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:4000/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    // console.log(error.response.data)\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('https://problemsolvers.onrender.com//api/users/signup', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","console","log"],"sources":["D:/Projects/Problem-Solvers/frontend/src/redux/actions/userActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\"\r\n\r\nexport const login = (email,password) => async(dispatch) => {\r\n    try {\r\n        \r\n        dispatch({type: USER_LOGIN_REQUEST})\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('http://localhost:4000/api/users/login',{email,password},config)\r\n        \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        // console.log(error.response.data)\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n                payload: \r\n                error.response && error.response.data.message     \r\n                ? error.response.data.message\r\n                : error.message\r\n            })\r\n        }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n}\r\n\r\n\r\nexport const register = (name, email,password) => async(dispatch) => {\r\n    try {\r\n        \r\n        dispatch({type: USER_REGISTER_REQUEST})\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('https://problemsolvers.onrender.com//api/users/signup',{name,email,password},config)\r\n        \r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error\r\n            })\r\n        }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,4BAA4B;AAEnL,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAACC,QAAQ,KAAK,MAAMC,QAAQ,IAAK;EACxD,IAAI;IAEAA,QAAQ,CAAC;MAACC,IAAI,EAAEV;IAAkB,CAAC,CAAC;IAEpC,MAAMW,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAC;MACnB;IACJ,CAAC;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,uCAAuC,EAAC;MAACP,KAAK;MAACC;IAAQ,CAAC,EAACG,MAAM,CAAC;IAEhGF,QAAQ,CAAC;MACLC,IAAI,EAAET,kBAAkB;MACxBc,OAAO,EAAEF;IACb,CAAC,CAAC;IAEFG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAGzD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZ;IACAX,QAAQ,CAAC;MACLC,IAAI,EAAEX,eAAe;MACjBgB,OAAO,EACPK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3CF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACZ,CAAC,CAAC;EACN;AACR,CAAC;AAGD,OAAO,MAAMC,MAAM,GAAG,MAAOd,QAAQ,IAAI;EACrCO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCf,QAAQ,CAAC;IAACC,IAAI,EAACR;EAAW,CAAC,CAAC;AAChC,CAAC;AAGD,OAAO,MAAMuB,QAAQ,GAAG,CAACC,IAAI,EAAEnB,KAAK,EAACC,QAAQ,KAAK,MAAMC,QAAQ,IAAK;EACjE,IAAI;IAEAA,QAAQ,CAAC;MAACC,IAAI,EAAEN;IAAqB,CAAC,CAAC;IAEvC,MAAMO,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAC;MACnB;IACJ,CAAC;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,uDAAuD,EAAC;MAACY,IAAI;MAACnB,KAAK;MAACC;IAAQ,CAAC,EAACG,MAAM,CAAC;IAErHF,QAAQ,CAAC;MACLC,IAAI,EAAEL,qBAAqB;MAC3BU,OAAO,EAAEF;IACb,CAAC,CAAC;IAEFJ,QAAQ,CAAC;MACLC,IAAI,EAAET,kBAAkB;MACxBc,OAAO,EAAEF;IACb,CAAC,CAAC;IAEFG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAGzD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZO,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IAClBX,QAAQ,CAAC;MACLC,IAAI,EAAEP,kBAAkB;MACxBY,OAAO,EAAEK;IACT,CAAC,CAAC;EACN;AACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}