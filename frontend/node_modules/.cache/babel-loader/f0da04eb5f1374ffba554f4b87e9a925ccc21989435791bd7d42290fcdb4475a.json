{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\n\n//^ Used to insert consition before dispatch\nimport thunk from 'redux-thunk';\n\n//^ Setting and getting ready for redux extension\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './redux/reducers/userReducer';\nimport { getProblemsReducer } from './redux/reducers/problemReducer';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  getAllProblems: getProblemsReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","getProblemsReducer","reducer","userLogin","userRegister","getAllProblems","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["D:/Projects/Problem-Solvers/frontend/src/store.js"],"sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux'\r\n\r\n//^ Used to insert consition before dispatch\r\nimport thunk from 'redux-thunk'\r\n\r\n//^ Setting and getting ready for redux extension\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport {  userLoginReducer, userRegisterReducer } from './redux/reducers/userReducer'\r\nimport { getProblemsReducer } from './redux/reducers/problemReducer'\r\n\r\nconst reducer = combineReducers({\r\n    userLogin        : userLoginReducer,\r\n    userRegister     : userRegisterReducer,\r\n    getAllProblems: getProblemsReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')?\r\nJSON.parse(localStorage.getItem('userInfo')): null\r\n\r\n\r\nconst initialState = {\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n\r\n"],"mappings":"AAAA,SAAQA,WAAW,EAACC,eAAe,EAACC,eAAe,QAAO,OAAO;;AAEjE;AACA,OAAOC,KAAK,MAAM,aAAa;;AAE/B;AACA,SAAQC,mBAAmB,QAAO,0BAA0B;AAE5D,SAAUC,gBAAgB,EAAEC,mBAAmB,QAAQ,8BAA8B;AACrF,SAASC,kBAAkB,QAAQ,iCAAiC;AAEpE,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC5BQ,SAAS,EAAUJ,gBAAgB;EACnCK,YAAY,EAAOJ,mBAAmB;EACtCK,cAAc,EAAEJ;AACpB,CAAC,CAAC;AAEF,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAC5DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAE,IAAI;AAGlD,MAAMG,YAAY,GAAG;EACjBR,SAAS,EAAE;IAACS,QAAQ,EAAEN;EAAmB;AAC7C,CAAC;AAED,MAAMO,UAAU,GAAG,CAAChB,KAAK,CAAC;AAC1B,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAO,EAACS,YAAY,EAACb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAU,CAAC,CAAC,CAAC;AAEnG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}